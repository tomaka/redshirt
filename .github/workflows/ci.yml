name: Continuous integration

on:
  pull_request:

jobs:
  build-programs:
    name: Build WASM programs
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2025-03-14
        target: wasm32-wasip1
        override: true
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake clang-10
    - uses: actions/cache@v4.2.0
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          programs/target
        key: programs-cargo-${{ hashFiles('./programs/Cargo.lock') }}
    - name: Build programs
      run: cargo build --manifest-path ./programs/Cargo.toml --workspace --exclude stub --locked --verbose --release --target=wasm32-wasip1
    - name: Upload WASM programs
      uses: actions/upload-artifact@v4
      with:
        name: wasm-programs
        path: programs/target

  test-core:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/cache@v4.2.0
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: core-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Install nightly Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2025-03-14
        target: wasm32-wasip1
        override: true
    - name: Test redshirt-core
      run: cargo test --package redshirt-core

  build-test-standalone:
    name: Build and test standalone kernel
    needs: build-programs
    runs-on: ubuntu-20.04  # TODO: for the more recent QEmu version compared to ubuntu-18
    strategy:
      matrix:
        #target: [x86_64-multiboot2, arm-rpi2]  # TODO: not implemented
        target: [x86_64-multiboot2]
    steps:
    - uses: actions/checkout@v3
    - name: Download WASM programs
      uses: actions/download-artifact@v4
      with:
        name: wasm-programs
    - name: Install required packages
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-10 lld libisoburn1 xorriso grub-pc-bin mtools
    - run: |
        sudo apt-get install qemu-utils qemu-system-x86
      if: ${{ matrix.target == 'x86_64-multiboot2'}}
    - uses: actions/cache@v4.2.0
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          kernel-standalone-builder/target
          target
        key: standalone-kernel-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Install nightly Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-2025-03-14
        target: wasm32-wasip1
        override: true
    - name: Install rust-src
      run: rustup component add rust-src
    - name: Build kernel
      run: cargo run --manifest-path=./kernel-standalone-builder/Cargo.toml -- build-image --target ${{ matrix.target }} --device-type cdrom --out image
    - name: Test kernel
      run: cargo run --manifest-path=./kernel-standalone-builder/Cargo.toml -- emulator-test --target ${{ matrix.target }} --emulator qemu
    - name: Upload generated kernel
      uses: actions/upload-artifact@v4
      with:
        name: kernel-${{ matrix.target }}
        path: image

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install rustfmt
        run: rustup component add rustfmt
      - name: Run cargo fmt on root workspace
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      - name: Run cargo fmt on programs workspace
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --manifest-path=programs/Cargo.toml -- --check
      - name: Run cargo fmt on standalone tester workspace
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all --manifest-path=kernel-standalone-builder/Cargo.toml -- --check

  intra-doc-links:
    name: Check intra-doc links
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly-2025-03-14
          target: wasm32-wasip1
          override: true
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y clang-10
      - uses: actions/cache@v4.2.0
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            programs/target
            kernel-standalone-builder/target
            target
          key: intra-doc-links-${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Check core intra-doc links
        run: RUSTDOCFLAGS="--deny broken_intra_doc_links" cargo doc --verbose --workspace --no-deps --document-private-items
      - name: Check programs intra-doc links
        run: RUSTDOCFLAGS="--deny broken_intra_doc_links" cargo doc --verbose --manifest-path programs/Cargo.toml --workspace --no-deps --document-private-items

  all-ci:
    # This dummy job depends on all the mandatory checks. It succeeds if and only if CI is
    # considered successful.
    needs: [build-test-standalone, fmt, intra-doc-links]
    runs-on: ubuntu-latest
    steps:
     - run: echo Success
